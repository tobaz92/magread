name: CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - ci

jobs:
  install-deps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.9.0"

      - name: Clean npm cache
        run: npm cache clean --force
        working-directory: ./back

      - name: Install dependencies
        run: npm install
        working-directory: ./back

      - name: Verify Jest and ts-jest installation
        run: npx jest --version && npx ts-jest --version
        working-directory: ./back

  tests:
    runs-on: ubuntu-latest
    needs: install-deps

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..10}; do
            if nc -z localhost 27017; then
              echo "MongoDB is ready!";
              exit 0;
            fi
            echo "Waiting for MongoDB...";
            sleep 5;
          done
          echo "MongoDB did not become ready in time.";
          exit 1

      - name: Save MongoDB configuration
        run: echo "MONGO_URL=mongodb://localhost:27017" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.9.0"

      - name: Install dependencies
        run: npm install
        working-directory: ./back

      - name: List installed dependencies
        run: npm list
        working-directory: ./back

      - name: Run tests
        env:
          MONGO_URL: ${{ env.MONGO_URL }}
          DATABASE_NAME: "magread"
          SESSION_SECRET: "secret"
          TOKEN_SECRET: "secret"
        run: npm run test
        working-directory: ./back

  build:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: echo "${DOCKER_ACCESS_TOKEN}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build Docker Image — Back
        working-directory: ./back
        run: docker build -t tobaz92/magread:back-latest --push .

      - name: Build Docker Image — Reader
        working-directory: ./reader
        run: docker build -t tobaz92/magread:reader-latest --push .

      - name: Build Docker Image — Core
        working-directory: ./rust/core
        run: docker build -t tobaz92/magread:core-latest --push .

      - name: Build Docker Image — Optimizer
        working-directory: ./rust/optimizer
        run: docker build -t tobaz92/magread:optimizer-latest --push .
